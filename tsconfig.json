{
  "compilerOptions": {


    "moduleDetection": "force",   /*This option forces TypeScript to consider all files as modules.*/
    "noUncheckedIndexedAccess": true, /*Prevents you from accessing an array or object without first checking if it's defined.
     This is a great way to prevent runtime errors, and should really be included in strict.*/
    "target": "ESNext",
    "jsx": "preserve",
    "lib": [
      "DOM",
      "ESNext"
    ],
    "baseUrl": ".",
    "module": "ESNext",
    "moduleResolution": "node",
    "paths": {
      "@/*": [
        "src/*"
      ]
    },
    "resolveJsonModule": true,
    "types": [
      "vite/client",
      "vite-plugin-vue-layouts/client",
      "unplugin-vue-router/client"
    ],
    "allowJs": true,
    "strict": true,
    "strictNullChecks": true,
    "noUnusedLocals": true,
    "esModuleInterop": true,
    "forceConsistentCasingInFileNames": true,
    "isolatedModules": true,
    "skipLibCheck": true
  },
  "include": [
    "./src/typed-router.d.ts"
  ],
  "exclude": [
    "dist",
    "node_modules",
    "cypress"
  ],
  "references": [
    {
      "path": "./tsconfig.node.json"
    }
  ]
}
